"""Add Project table

Revision ID: 7bdf894e9e6c
Revises: aac6b39fb156
Create Date: 2025-10-26 21:53:21.225288

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7bdf894e9e6c'
down_revision = 'aac6b39fb156'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('freelancer_id', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('budget', sa.Float(), nullable=False),
    sa.Column('deadline', sa.DateTime(), nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('payment_status', sa.String(length=50), nullable=True),
    sa.Column('project_type', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('matched_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('cancellation_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['freelancer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('required_proficiency', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'skill_id', name='uq_project_skill')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('related_project_id', sa.Integer(), nullable=True),
    sa.Column('related_deliverable_id', sa.Integer(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_emailed', sa.Boolean(), nullable=True),
    sa.Column('email_sent_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['related_deliverable_id'], ['deliverables.id'], ),
    sa.ForeignKeyConstraint(['related_project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('idx_user_unread', ['user_id', 'is_read'], unique=False)

    with op.batch_alter_table('deliverables', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('deliverables', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('idx_user_unread')

    op.drop_table('notifications')
    op.drop_table('project_skills')
    op.drop_table('projects')
    # ### end Alembic commands ###
